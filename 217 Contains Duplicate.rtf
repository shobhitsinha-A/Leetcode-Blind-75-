{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular_wdth_opsz140000_GRAD_wght1F40000;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red12\green99\blue153;
\red0\green0\blue0;\red210\green50\blue85;\red135\green135\blue135;\red85\green138\blue3;\red135\green91\blue44;
\red255\green255\blue255;\red93\green108\blue125;\red133\green0\blue67;}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c46667\c66667;
\cssrgb\c0\c0\c0;\cssrgb\c86667\c29020\c40784;\cssrgb\c60000\c60000\c60000;\cssrgb\c40000\c60000\c0;\cssrgb\c60392\c43137\c22745;
\cssrgb\c100000\c100000\c100000\c50196;\cssrgb\c43922\c50196\c56471;\cssrgb\c60000\c0\c33333;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 217.\'a0Contains Duplicate
\f1\fs26 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 class\cf0 \strokec5  \cf6 \strokec6 Solution\cf7 \strokec7 :\cf0 \strokec5 \
    \cf4 \strokec4 def\cf0 \strokec5  \cf6 \strokec6 containsDuplicate\cf7 \strokec7 (\cf0 \strokec5 self\cf7 \strokec7 ,\cf0 \strokec5  nums\cf7 \strokec7 :\cf0 \strokec5  List\cf7 \strokec7 [\cf8 \strokec8 int\cf7 \strokec7 ])\cf0 \strokec5  \cf9 \cb10 \strokec9 ->\cf0 \cb1 \strokec5  \cf8 \strokec8 bool\cf7 \strokec7 :\cf0 \strokec5 \
        \cf11 \strokec11 # listi = set()\cf0 \strokec5 \
        \cf11 \strokec11 # for i in nums:\cf0 \strokec5 \
        \cf11 \strokec11 #     if i not in listi:\cf0 \strokec5 \
        \cf11 \strokec11 #         listi.add(i)\cf0 \strokec5 \
        \cf11 \strokec11 #     else:\cf0 \strokec5 \
        \cf11 \strokec11 #         return True\cf0 \strokec5 \
        \
        \cf11 \strokec11 # return False\cf0 \strokec5 \
\
        \cf11 \strokec11 # #NEETCODE -> \cf0 \strokec5 \
        \cf11 \strokec11 # Hashset = set()\cf0 \strokec5 \
        \cf11 \strokec11 # for n in nums:\cf0 \strokec5 \
        \cf11 \strokec11 #     if n in Hashset:\cf0 \strokec5 \
        \cf11 \strokec11 #         #if there are duplicates \cf0 \strokec5 \
        \cf11 \strokec11 #         return True \cf0 \strokec5 \
        \cf11 \strokec11 #     Hashset.add(n)\cf0 \strokec5 \
        \cf11 \strokec11 # #if there no duplicates \cf0 \strokec5 \
        \cf11 \strokec11 # return False\cf0 \strokec5 \
\
        \cf11 \strokec11 #review\cf0 \strokec5 \
        Hashset \cf9 \cb10 \strokec9 =\cf0 \cb1 \strokec5  \cf8 \strokec8 set\cf7 \strokec7 ()\cf0 \strokec5 \
\
        \cf4 \strokec4 for\cf0 \strokec5  n \cf4 \strokec4 in\cf0 \strokec5  nums\cf7 \strokec7 :\cf0 \strokec5 \
            \cf4 \strokec4 if\cf0 \strokec5  n \cf4 \strokec4 in\cf0 \strokec5  Hashset\cf7 \strokec7 :\cf0 \strokec5 \
                \cf4 \strokec4 return\cf0 \strokec5  \cf12 \strokec12 True\cf0 \strokec5 \
            Hashset\cf7 \strokec7 .\cf0 \strokec5 add\cf7 \strokec7 (\cf0 \strokec5 n\cf7 \strokec7 )\cf0 \strokec5 \
        \cf4 \strokec4 return\cf0 \strokec5  \cf12 \strokec12 False\cf0 \strokec5  \
\pard\pardeftab720\partightenfactor0
\cf0 \outl0\strokewidth0 \
        \
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 \
}