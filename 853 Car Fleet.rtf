{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular_wdth_opsz140000_GRAD_wght1F40000;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red0\green0\blue255;
\red0\green0\blue0;\red32\green108\blue135;\red101\green76\blue29;\red0\green0\blue109;\red157\green0\blue210;
\red15\green112\blue1;\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c100000;
\cssrgb\c0\c0\c0;\cssrgb\c14902\c49804\c60000;\cssrgb\c47451\c36863\c14902;\cssrgb\c0\c6275\c50196;\cssrgb\c68627\c0\c85882;
\cssrgb\c0\c50196\c0;\cssrgb\c3529\c52549\c34510;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 853\'a0Car Fleet
\f1\fs26 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f2 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 class\cf0 \strokec5  \cf6 \strokec6 Solution\cf0 \strokec5 :\cb1 \
\cb3     \cf4 \strokec4 def\cf0 \strokec5  \cf7 \strokec7 carFleet\cf0 \strokec5 (\cf8 \strokec8 self\cf0 \strokec5 , \cf8 \strokec8 target\cf0 \strokec5 : \cf6 \strokec6 int\cf0 \strokec5 , \cf8 \strokec8 position\cf0 \strokec5 : List[\cf6 \strokec6 int\cf0 \strokec5 ], \cf8 \strokec8 speed\cf0 \strokec5 : List[\cf6 \strokec6 int\cf0 \strokec5 ]) -> \cf6 \strokec6 int\cf0 \strokec5 :\cb1 \
\cb3         pairs = [[p,s] \cf9 \strokec9 for\cf0 \strokec5  p,s \cf4 \strokec4 in\cf0 \strokec5  \cf7 \strokec7 zip\cf0 \strokec5 (position,speed)] \cf10 \strokec10 #position,speed\cf0 \cb1 \strokec5 \
\cb3         stack = []\cb1 \
\cb3         \cb1 \
\cb3         \cf9 \strokec9 for\cf0 \strokec5  p,s \cf4 \strokec4 in\cf0 \strokec5  \cf7 \strokec7 sorted\cf0 \strokec5 (pairs)[::-\cf11 \strokec11 1\cf0 \strokec5 ]: \cf10 \strokec10 #starting from reverse \cf0 \cb1 \strokec5 \
\cb3             stack.append((target-p)/s)\cb1 \
\cb3             \cf9 \strokec9 if\cf0 \strokec5  \cf7 \strokec7 len\cf0 \strokec5 (stack) >= \cf11 \strokec11 2\cf0 \strokec5  \cf4 \strokec4 and\cf0 \strokec5  stack[-\cf11 \strokec11 1\cf0 \strokec5 ]<=stack[-\cf11 \strokec11 2\cf0 \strokec5 ]:\cb1 \
\cb3                 stack.pop()\cb1 \
\cb3         \cb1 \
\cb3         \cf9 \strokec9 return\cf0 \strokec5  \cf7 \strokec7 len\cf0 \strokec5 (stack)
\f0\fs40 \cf2 \cb3 \strokec2 \

\f2\fs26 \cf0 \cb1 \strokec5 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0  \
}