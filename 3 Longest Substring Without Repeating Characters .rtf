{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular_wdth_opsz120000_GRAD_wght1F40000;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue255;\red32\green108\blue135;\red101\green76\blue29;\red0\green0\blue109;\red19\green118\blue70;
\red157\green0\blue210;\red15\green112\blue1;}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c14902\c49804\c60000;\cssrgb\c47451\c36863\c14902;\cssrgb\c0\c6275\c50196;\cssrgb\c3529\c52549\c34510;
\cssrgb\c68627\c0\c85882;\cssrgb\c0\c50196\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 3\'a0Longest Substring Without Repeating Characters
\f1\fs26 \cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 class\cf0 \strokec4  \cf6 \strokec6 Solution\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 def\cf0 \strokec4  \cf7 \strokec7 lengthOfLongestSubstring\cf0 \strokec4 (\cf8 \strokec8 self\cf0 \strokec4 , \cf8 \strokec8 s\cf0 \strokec4 : \cf6 \strokec6 str\cf0 \strokec4 ) -> \cf6 \strokec6 int\cf0 \strokec4 :\cb1 \
\cb3         charset = \cf6 \strokec6 set\cf0 \strokec4 ()\cb1 \
\cb3         l=\cf9 \strokec9 0\cf0 \cb1 \strokec4 \
\cb3         maxlen = \cf9 \strokec9 0\cf0 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 for\cf0 \strokec4  r \cf5 \strokec5 in\cf0 \strokec4  \cf7 \strokec7 range\cf0 \strokec4 (\cf7 \strokec7 len\cf0 \strokec4 (s)):\cb1 \
\cb3             \cf10 \strokec10 while\cf0 \strokec4  s[r] \cf5 \strokec5 in\cf0 \strokec4  charset:\cb1 \
\cb3                 charset.remove(s[l])\cb1 \
\cb3                 l+=\cf9 \strokec9 1\cf0 \cb1 \strokec4 \
\
\cb3             charset.add(s[r])\cb1 \
\cb3             maxlen = \cf7 \strokec7 max\cf0 \strokec4 (maxlen,\cf7 \strokec7 len\cf0 \strokec4 (charset))   \cb1 \
\cb3         \cb1 \
\cb3         \cf10 \strokec10 return\cf0 \strokec4  maxlen\cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cb1 \
\cb3         \cf11 \strokec11 # charSet = set()\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 # l=0\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 # res = 0\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 # for r in range(len(s)):\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 #     while s[r] in charSet:\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 #         charSet.remove(s[l])\cf0 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 #         l+=1\cf0 \cb1 \strokec4 \
\cb3                 \cb1 \
\cb3         \cf11 \strokec11 #     charSet.add(s[r])\cf0 \cb1 \strokec4 \
\cb3             \cb1 \
\cb3         \cf11 \strokec11 #     res = max(res,r-l+1)\cf0 \cb1 \strokec4 \
\cb3            \cb1 \
\cb3         \cb1 \
\cb3         \cf11 \strokec11 # return res\cf0 \cb1 \strokec4 \
}